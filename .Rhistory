getwd()
q()
str(ls)
str(lm)
str(mean)
s<-c("a",1,2,TRUE)
str(s)
s<-list("a",1,2,TRUE)
str(s)
s[2]
?ls
ls
lm
str(dnorm)
str(pnorm)
str(rpois)
?rpois
set.seed(1)
rpois(5,2)
library(swirl)
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_sqrt
my_div
1:20
pi:10
15:1
?Â´:Â´
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Hao")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="_")
paste(LETTERS,1:4,sep="-")
c(44,NA,5,NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
names<-c("patients","age","weight","bp","rating","test")
names<-c("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
exit()
info()
bye()
install.package("KernSmooth")
install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
?ls
library(datasets)
data(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
data(mtcars)
sapply(split(mtcars$hp,mtcars$cyl),mean)
a<-sapply(split(mtcars$hp,mtcars$cyl),mean)
a[3]-a[1]
setwd("C:/Users/haow/ProgrammingAssignment2")
?solve
A<-rand(5,6)
c<-rbind(c(1,-1/4),c(-1/4,1))
c
inv(c)
solve(c)
solve(c)%*%c
